% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-textured-rect.R
\docType{data}
\name{geom_textured_rect}
\alias{geom_textured_rect}
\alias{GeomTexturedRect}
\title{Textured rectangles}
\usage{
geom_textured_rect(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  img_width = unit(1, "null"),
  img_height = NA,
  nrow = NA,
  ncol = NA,
  interpolate = TRUE,
  legend_key_params = NULL,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{img_width}{Unit object specifying the width of the texture image.
If \code{"null"} unit is used, then the image width is calculated relative
to the rectangle width.}

\item{img_height}{Unit object specifying the height of the texture image.
If \code{"null"} unit is used, then the image height is calculated relative
to the rectangle height.}

\item{nrow}{Number of image rows. If \code{NA}, is calculated automatically
from the available space.}

\item{ncol}{Number of image columns. If \code{NA}, is calculated automatically
from the available space.}

\item{interpolate}{A logical value indicating whether to linearly interpolate the image
(the alternative is to use nearest-neighbour interpolation, which gives a more blocky result).}

\item{legend_key_params}{A list holding additional parameters to be handed off
to \code{texture_grob()} when it is used to draw the legend keys. These parameters
can be used, for example, to make sure the images in the legend keys have the
correct size or alignment.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
}
\description{
\code{geom_textured_rect()} draws rectangles that are filled with
texture images.
}
\examples{
library(ggplot2)
library(tibble)
library(magick)

data <- tibble(
  xmin = c(1, 2.5), ymin = c(1, 1), xmax = c(2, 4), ymax = c(4, 3),
  image = list(
    "https://jeroen.github.io/images/Rlogo.png",
    image_read_svg("https://jeroen.github.io/images/tiger.svg")
   )
)

ggplot(data, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, image = image)) +
  geom_textured_rect(img_width = unit(1, "in"))
}
\keyword{datasets}
